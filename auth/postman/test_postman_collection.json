{
	"info": {
		"_postman_id": "05129fbe-6b3e-4037-8dbb-8da16c761485",
		"name": "auth",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "registration",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "424ea785-cc4e-41e7-9548-034564e7e9b7",
						"exec": [
							"pm.test(\"Log response errors\", function () {",
							"    if (pm.response.json().data.error){",
							"       console.log(pm.response.json());   ",
							"    }",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Status is 201\", function(){",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response has uuid\", function(){",
							"    pm.expect(pm.response.json().data.uuid).to.be.a('string');",
							"});",
							"",
							"pm.collectionVariables.set('uuid', pm.response.json().data.uuid)",
							"pm.collectionVariables.set('test', pm.response.json().data.uuid)",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "8bdfa076-d9a1-48eb-93f4-c8931084ae50",
						"exec": [
							"var my_timestamp = new Date();",
							"postman.setEnvironmentVariable('randomInt',my_timestamp.getTime().toString().slice(0,10));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\":\"test{{randomInt}}@gmail.com\",\n\t\"password\":\"test00\",\n\t\"firstName\":\"Roman\",\n\t\"lastName\":\"Dikiy\",\n\t\"phone\":\"+380938982443\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/user/registration",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"user",
						"registration"
					]
				},
				"description": "Register user"
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "383305ff-bffa-438d-8c69-fa38ab932179",
						"exec": [
							"pm.test(\"Log response errors\", function () {",
							"    if (pm.response.json().datap && pm.response.json().data.error){",
							"       console.log(pm.response.json());   ",
							"    }",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Response status is 200\", function(){",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has a token\", function(){",
							"    pm.expect(pm.response.json().token).to.be.a('string');",
							"});",
							"",
							"pm.test(\"Response has a refresh_token\", function(){",
							"    pm.expect(pm.response.json().token).to.be.a('string');",
							"});",
							"",
							"pm.collectionVariables.set('access_token', pm.response.json().token)",
							"pm.collectionVariables.set('refresh_token', pm.response.json().refresh_token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\":\"test{{randomInt}}@gmail.com\",\n\t\"password\":\"test00\"\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "{{host}}/api/user/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "refresh",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ac2b6c9f-b00c-4ba5-93d4-d585cd8466a7",
						"exec": [
							"pm.test(\"Log response errors\", function () {",
							"    if (pm.response.json().datap && pm.response.json().data.error){",
							"       console.log(pm.response.json());   ",
							"    }",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Response status 200\", function(){",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has a token\", function(){",
							"    pm.expect(pm.response.json().token).to.be.a('string');",
							"});",
							"",
							"pm.test(\"To have a refresh_token\", function(){",
							"    pm.expect(pm.response.json().refresh_token).to.be.a('string');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "refresh_token",
							"value": "{{refresh_token}}",
							"type": "text"
						}
					],
					"options": {
						"urlencoded": {}
					}
				},
				"url": {
					"raw": "{{host}}/api/token/refresh",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"token",
						"refresh"
					]
				},
				"description": "refresh token"
			},
			"response": []
		},
		{
			"name": "user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "80e5d4c7-93b3-4b18-ab3d-7c4cba638c9c",
						"exec": [
							"pm.test(\"Log response errors\", function () {",
							"    if (pm.response.json().data.error){",
							"       console.log(pm.response.json());   ",
							"    }",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Response status is 200\", function(){",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has email\", function(){",
							"    pm.expect(pm.response.json().data.email).to.be.a('string');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "{{host}}/api/user/current",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"user",
						"current"
					]
				},
				"description": "get user data"
			},
			"response": []
		},
		{
			"name": "cert",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "89ef34b9-51e1-4f76-b4b7-3dd636c95f46",
						"exec": [
							"pm.test(\"Log response errors\", function () {",
							"    if (pm.response.json().data.error){",
							"       console.log(pm.response.json());   ",
							"    }",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Response status is 200\", function(){",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has key\", function(){",
							"    pm.expect(pm.response.json().data.key).to.be.a('string');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api/cert",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"cert"
					]
				},
				"description": "get user data"
			},
			"response": []
		},
		{
			"name": "password-restore",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "52fcb38b-6305-4afe-9821-6bc5d86af24f",
						"exec": [
							"pm.test(\"Log response errors\", function () {",
							"    if (pm.response.json().datap && pm.response.json().data.error) {",
							"        console.log(pm.response.json());",
							"    }",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Response status is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"contact\":\"test{{randomInt}}@gmail.com\",\n\t\"password\":\"test11\"\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "{{host}}/api/user/password/restore",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"user",
						"password",
						"restore"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"id": "620d18fd-96b9-44ad-9d90-64a44643181e",
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"id": "de331154-f278-4369-a1f1-21bb29a439bc",
			"key": "refresh_token",
			"value": "",
			"type": "string"
		},
		{
			"id": "be8c4a09-f2ad-4877-b9c2-dc80defdc859",
			"key": "uuid",
			"value": "",
			"type": "string"
		},
		{
			"id": "b2eca05d-fddb-4d0d-9359-6bd8f097b6ac",
			"key": "test",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}