# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    SENDER_EMAIL_ADDRESS: '%env(resolve:SENDER_EMAIL_ADDRESS)%'
    SENDER_PHONE_NUMBER: '%env(resolve:SENDER_PHONE_NUMBER)%'
    ###
    TWILIO_TOKEN: '%env(resolve:TWILIO_TOKEN)%'
    TWILIO_SID: '%env(resolve:TWILIO_SID)%'
    ###
    SMTP_SERVER: '%env(resolve:SMTP_SERVER)%'
    SMTP_USER_NAME: '%env(resolve:SMTP_USER_NAME)%'
    SMTP_USER_PASSWORD: '%env(resolve:SMTP_USER_PASSWORD)%'
    ###
    env(MONGODB_URL): ''
    env(MONGODB_DB): ''
    ###
    RABBITMQ_HOST: '%env(resolve:RABBITMQ_HOST)%'
    RABBITMQ_PORT: '%env(resolve:RABBITMQ_POST)%'
    RABBITMQ_USER: '%env(resolve:RABBITMQ_USER)%'
    RABBITMQ_PASSWORD: '%env(resolve:RABBITMQ_PASS)%'
    RABBITMQ_VHOST: '%env(resolve:RABBITMQ_VHOST)%'
    ###
    JSON_SCHEME_PATH: '%kernel.project_dir%/config/jsonschema/'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Domain/Sender/ValueObject,Domain/Template/ValueObject,Domain/Template/Document,Domain/Sender/Document,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\UI\Api\:
        resource: '../src/UI/Api'
        tags: ['controller.service_arguments']

    App\Infrastructure\Repository\Doctrine\:
        resource: '%kernel.project_dir%/src/Infrastructure/Repository/Doctrine/*'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Psr\SimpleCache\CacheInterface: '@App\Infrastructure\Cache\InMemoryCache'
    App\Domain\Template\Repository\TemplateReadRepositoryInterface: '@App\Infrastructure\Repository\Doctrine\TemplateRepository'
    App\Domain\Template\Repository\TemplatePersistRepositoryInterface: '@App\Infrastructure\Repository\Doctrine\TemplateRepository'
    App\Domain\Sender\Repository\NotSentPersistRepositoryInterface: '@App\Infrastructure\Repository\Doctrine\NotSentRepository'
    App\Domain\Sender\Repository\SentPersistRepositoryInterface: '@App\Infrastructure\Repository\Doctrine\SentRepository'
    App\Infrastructure\Cache\CacheInterface: '@App\Infrastructure\Cache\InMemoryCache'
    App\Infrastructure\Metrics\MetricsInterface: '@App\Infrastructure\Metrics\StatsDMetrics'

    App\Infrastructure\Metrics\StatsDMetrics:
        arguments:
            - '%env(METRICS_HOST)%'
            - '%env(METRICS_PORT)%'
            - '%env(METRICS_NAMESPACE)%'
            - '%env(METRICS_TIMEOUT)%'

    App\Infrastructure\Clients\PHPMailerClient:
        public: true

    App\Infrastructure\Clients\TwilioClient:
        public: true

    twilio.client:
        class: Twilio\Rest\Client
        arguments: ['%env(resolve:TWILIO_SID)%', '%env(resolve:TWILIO_TOKEN)%']
    Twilio\Rest\Client: '@twilio.client'

    phpmailer.client:
        class: PHPMailer\PHPMailer\PHPMailer
        arguments: [true]
    PHPMailer\PHPMailer\PHPMailer: '@phpmailer.client'